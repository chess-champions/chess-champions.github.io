import{j as t}from"./mui-CXhE_iE7.js";import"./react-Bs57X6Ch.js";import{t as c,r as x,i as m,h as u}from"./shared-CyO4e3dZ.js";import{u as f}from"./localization-BTb5j_W4.js";import{R as j,C as k,a as C,X as _,Y as $,T as A,L as E,b as R,S as v}from"./charts-CZXdVTiO.js";import"./analytics-HyNrjKFN.js";import"./utils-BT3gc4jm.js";const l={[m.Classical]:"#4C72B0",[m.Rapid]:"#55A868",[m.Blitz]:"#C44E52"},B=({results:d,yob:g})=>{const{t:o}=f(),y=d.filter((e,n,a)=>a.findIndex(s=>s.year===e.year&&s.game===e.game&&s.rank<=e.rank)===n).sort((e,n)=>e.year-n.year),p=({x:e,y:n,payload:a})=>{if(!a||a.value===void 0)return null;const s=a.value,r=s-(g??s);return t.jsxs("g",{transform:`translate(${e},${n})`,children:[t.jsx("text",{x:0,y:0,dy:10,textAnchor:"middle",fill:"#666",children:s}),r>0&&t.jsxs("text",{x:0,y:15,dy:10,textAnchor:"middle",fill:"#999",children:[r," ",o("years")]})]})},h=({active:e,payload:n,label:a})=>{if(!e||!n||n.length===0)return null;const s=a;return t.jsxs("div",{style:{backgroundColor:"white",padding:10,border:"1px solid #ccc",borderRadius:5},children:[s,d.filter(r=>r.year===s).sort((r,i)=>r.rank-i.rank||r.game-i.game||r.category-i.category).map((r,i)=>t.jsxs("div",{children:[r.rank,":"," ",t.jsxs("span",{style:{color:l[r.game]},children:[`${o(`type_enum_short.${r.type}`)} `,o(`game_enum_short.${r.game}`),r.category==u.All?"":` ${o(`category_enum_short.${r.category}`)}`]})]},i))]})};return t.jsx(j,{width:"100%",height:"100%",children:t.jsxs(k,{margin:{top:10,right:10,left:10,bottom:10},children:[t.jsx(C,{strokeDasharray:"3 3"}),t.jsx(_,{type:"number",dataKey:"year",name:"Year",domain:[2014,x+1],padding:{left:20,right:20},height:40,ticks:[2014,2016,2018,2020,2022,2024,2026],tick:t.jsx(p,{})}),t.jsx($,{type:"number",dataKey:"rank",name:"Rank",domain:[1,5],reversed:!0,padding:{top:20,bottom:20},width:10}),t.jsx(A,{content:h}),t.jsx(E,{}),c.getEnums(m).map((e,n)=>t.jsx(R,{name:o(`game_enum_short.${e}`),type:"monotone",data:y.filter(a=>a.game===e),dataKey:"rank",stroke:l[e],strokeWidth:2,dot:{r:8}},`line-${n}`)),c.getEnums(m).map((e,n)=>t.jsx(v,{name:o(`game_enum_short.${e}`),data:d.filter(a=>a.game===e).map(a=>({year:a.year,rank:a.rank})),fill:l[e],legendType:"none"},`game_scatter-${n}`))]})})};export{B as default};
