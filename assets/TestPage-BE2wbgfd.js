import{r as n,j as e}from"./index-DlvwaeXF.js";import{u as C}from"./useNavigationService-Ch9MTTSA.js";const k=()=>{console.log("-> Component created");var t=C();const r=Math.sqrt(9),u=(console.log("Calculating value 2"),Math.sqrt(100)),[o,v]=n.useState(()=>(console.log("Initialize state value 1"),Math.floor(Math.random()*100)+1)),[l,V]=n.useState(()=>(console.log("Initialize state value 2"),Math.floor(Math.random()*100)+1)),M=n.useMemo(()=>(console.log("Computing memo value"),Math.floor(Math.random()*100)+1),[]),S=n.useMemo(()=>(console.log("Computing memo state value 1"),Math.floor(Math.random()*100)+1),[o]),z=n.useMemo(()=>(console.log("Computing memo state value 2"),Math.floor(Math.random()*100)+1),[l]),a=()=>(console.log("Function called"),o*2),i=n.useCallback(()=>(console.log("Memoized function called"),3),[]),d=n.useCallback(()=>(console.log("Memoized State Value1 function called"),o*3),[o]),m=n.useCallback(()=>(console.log("Memoized State Value2 function called"),l*3),[l]),h=n.useRef(),g=n.useRef(),f=n.useRef(),p=n.useRef(),x=n.useRef(),j=n.useRef();return n.useEffect(()=>{console.log("Component updated"),h.current&&console.log("Did func reference change?",h.current!==a),g.current&&console.log("Did memoizedFunction reference change?",g.current!==i),f.current&&console.log("Did memoizedSateValue1Function reference change?",f.current!==d),p.current&&console.log("Did memoizedSateValue2Function reference change?",p.current!==m),x.current&&console.log("Did hook change?",x.current!==t),j.current&&console.log("Did hook function change?",j.current!==t.getTournamentUrl),h.current=a,g.current=i,f.current=d,p.current=m,x.current=t,j.current=t.getTournamentUrl}),n.useEffect(()=>(console.log("Component mounted"),()=>{console.log("Component unmounted")}),[]),n.useEffect(()=>{console.log(`Component updated: stateValue1 is now ${o}`),V(s=>s+o)},[o]),n.useEffect(()=>{console.log(`Component updated: stateValue2 is now ${l}`)},[l]),console.log("<- Component render started"),e.jsxs("div",{style:{padding:"20px"},children:[e.jsx("h1",{children:"Test Page"}),e.jsxs("p",{children:[e.jsx("strong",{children:"Value 1:"})," ",r]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Value 2:"})," ",u]}),e.jsxs("p",{children:[e.jsx("strong",{children:"State Value 1:"})," ",o]}),e.jsxs("p",{children:[e.jsx("strong",{children:"State Value 2:"})," ",l]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Memo Value:"})," ",M]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Memo State Value1:"})," ",S]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Memo State Value2:"})," ",z]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Function:"})," ",a()]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Memoized Function:"})," ",i()]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Memoized State Value 1 Function:"})," ",d()]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Memoized State Value 2 Function:"})," ",m()]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Child Component 1:"})," ",e.jsx(c,{},"1")]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Child Component 2:"})," ",e.jsx(c,{value:r},"2")]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Child Component 3:"})," ",e.jsx(c,{value:o},"3")]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Child Component 4:"})," ",e.jsx(c,{value:M},"4")]}),e.jsx("button",{onClick:()=>v(s=>s+1),children:"Increment State Value 1"}),e.jsx("button",{onClick:()=>V(s=>s+1),children:"Increment State Value 2"})]})},c=({value:t})=>{console.log("-> Child Component created");var{getTournamentUrl:r}=C(),{getTournamentUrl:u}=C();const o=n.useRef();return n.useEffect(()=>{console.log("Component updated"),console.log("Do same hook functions equal?",r===u),o.current&&console.log("Did child hook function change?",o.current!==r),o.current=r}),n.useEffect(()=>(console.log("Child Component mounted"),()=>{console.log("Child Component unmounted")}),[]),console.log("<- Child Component render started"),`${t}`};export{k as default};
