import{r as n,j as e}from"./index-CxKMhj-_.js";const S=()=>{console.log("-> Component created");const s=Math.sqrt(9),j=(console.log("Calculating value 2"),Math.sqrt(100)),[o,f]=n.useState(()=>(console.log("Initialize state value 1"),Math.floor(Math.random()*100)+1)),[t,p]=n.useState(()=>(console.log("Initialize state value 2"),Math.floor(Math.random()*100)+1)),x=n.useMemo(()=>(console.log("Computing memo value"),Math.floor(Math.random()*100)+1),[]),C=n.useMemo(()=>(console.log("Computing memo state value 1"),Math.floor(Math.random()*100)+1),[o]),V=n.useMemo(()=>(console.log("Computing memo state value 2"),Math.floor(Math.random()*100)+1),[t]),c=()=>(console.log("Function called"),o*2),a=n.useCallback(()=>(console.log("Memoized function called"),3),[]),u=n.useCallback(()=>(console.log("Memoized State Value1 function called"),o*3),[o]),i=n.useCallback(()=>(console.log("Memoized State Value2 function called"),t*3),[t]),d=n.useRef(),m=n.useRef(),h=n.useRef(),g=n.useRef();return n.useEffect(()=>{console.log("Component updated"),d.current&&console.log("Did func reference change?",d.current!==c),m.current&&console.log("Did memoizedFunction reference change?",m.current!==a),h.current&&console.log("Did memoizedSateValue1Function reference change?",h.current!==u),g.current&&console.log("Did memoizedSateValue2Function reference change?",g.current!==i),d.current=c,m.current=a,h.current=u,g.current=i}),n.useEffect(()=>(console.log("Component mounted"),()=>{console.log("Component unmounted")}),[]),n.useEffect(()=>{console.log(`Component updated: stateValue1 is now ${o}`),p(l=>l+o)},[o]),n.useEffect(()=>{console.log(`Component updated: stateValue2 is now ${t}`)},[t]),console.log("<- Component render started"),e.jsxs("div",{style:{padding:"20px"},children:[e.jsx("h1",{children:"Test Page"}),e.jsxs("p",{children:[e.jsx("strong",{children:"Value 1:"})," ",s]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Value 2:"})," ",j]}),e.jsxs("p",{children:[e.jsx("strong",{children:"State Value 1:"})," ",o]}),e.jsxs("p",{children:[e.jsx("strong",{children:"State Value 2:"})," ",t]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Memo Value:"})," ",x]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Memo State Value1:"})," ",C]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Memo State Value2:"})," ",V]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Function:"})," ",c()]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Memoized Function:"})," ",a()]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Memoized State Value 1 Function:"})," ",u()]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Memoized State Value 2 Function:"})," ",i()]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Child Component 1:"})," ",e.jsx(r,{},"1")]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Child Component 2:"})," ",e.jsx(r,{value:s},"2")]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Child Component 3:"})," ",e.jsx(r,{value:o},"3")]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Child Component 4:"})," ",e.jsx(r,{value:x},"4")]}),e.jsx("button",{onClick:()=>f(l=>l+1),children:"Increment State Value 1"}),e.jsx("button",{onClick:()=>p(l=>l+1),children:"Increment State Value 2"})]})},r=({value:s})=>(console.log("-> Child Component created"),n.useEffect(()=>(console.log("Child Component mounted"),()=>{console.log("Child Component unmounted")}),[]),console.log("<- Child Component render started"),`${s}`);export{S as default};
